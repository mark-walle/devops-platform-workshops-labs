apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory request for
        container prometheus-mark-walle-prometheus-configmap-reload; cpu, memory limit
        for container prometheus-mark-walle-prometheus-configmap-reload; cpu, memory
        request for container prometheus-mark-walle-prometheus; cpu, memory limit
        for container prometheus-mark-walle-prometheus'
      openshift.io/scc: restricted
    creationTimestamp: 2019-05-27T18:56:17Z
    generateName: mark-walle-prometheus-mark-walle-prometheus-7f5cd7bbc4-
    labels:
      app: prometheus
      chart: prometheus-8.11.4
      component: mark-walle-prometheus
      heritage: Tiller
      pod-template-hash: "3917836670"
      release: mark-walle-prometheus
    name: mark-walle-prometheus-mark-walle-prometheus-7f5cd7bbc4-2ks5b
    namespace: s4g19x-mark-walle-openshift201-may2019-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mark-walle-prometheus-mark-walle-prometheus-7f5cd7bbc4
      uid: 1bb8f3e4-80b1-11e9-8dc7-0050568348cc
    resourceVersion: "795096605"
    selfLink: /api/v1/namespaces/s4g19x-mark-walle-openshift201-may2019-dev/pods/mark-walle-prometheus-mark-walle-prometheus-7f5cd7bbc4-2ks5b
    uid: 1bc3eecf-80b1-11e9-8dc7-0050568348cc
  spec:
    containers:
    - args:
      - --volume-dir=/etc/config
      - --webhook-url=http://127.0.0.1:9090/-/reload
      image: jimmidyson/configmap-reload:v0.2.2
      imagePullPolicy: IfNotPresent
      name: prometheus-mark-walle-prometheus-configmap-reload
      resources:
        limits:
          cpu: 250m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1007330000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-tvw7w
        readOnly: true
    - args:
      - --config.file=/etc/config/prometheus.yml
      - --storage.tsdb.path=/data
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
      image: prom/prometheus:v2.9.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: prometheus-mark-walle-prometheus
      ports:
      - containerPort: 9090
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      resources:
        limits:
          cpu: 250m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1007330000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-tvw7w
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-p775t
    nodeName: ociopf-p-193.dmz
    nodeSelector:
      region: app
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1007330000
      seLinuxOptions:
        level: s0:c86,c10
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: mark-walle-prometheus-mark-walle-prometheus
      name: config-volume
    - name: storage-volume
      persistentVolumeClaim:
        claimName: mark-walle-prometheus-mark-walle-prometheus
    - name: default-token-tvw7w
      secret:
        defaultMode: 420
        secretName: default-token-tvw7w
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2019-05-27T18:56:17Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2019-05-27T18:57:02Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2019-05-27T18:56:17Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://798f68a8d5878e2bbb27a2cd39b8c96a2692a9a9d0a04412ec202d2227c7b707
      image: docker.io/prom/prometheus:v2.9.2
      imageID: docker-pullable://docker.io/prom/prometheus@sha256:05350e0d1a577674442046961abf56b3e883dcd82346962f9e73f00667958f6b
      lastState: {}
      name: prometheus-mark-walle-prometheus
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2019-05-27T18:56:32Z
    - containerID: docker://56b2233ac58e362a10bbb31e7e2c2667c308bfecafeec96b08456f058599dc26
      image: docker.io/jimmidyson/configmap-reload:v0.2.2
      imageID: docker-pullable://docker.io/jimmidyson/configmap-reload@sha256:befec9f23d2a9da86a298d448cc9140f56a457362a7d9eecddba192db1ab489e
      lastState: {}
      name: prometheus-mark-walle-prometheus-configmap-reload
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2019-05-27T18:56:30Z
    hostIP: 142.34.143.179
    phase: Running
    podIP: 172.51.120.30
    qosClass: Burstable
    startTime: 2019-05-27T18:56:17Z
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-8.11.4","component":"mark-walle-prometheus","heritage":"Tiller","release":"mark-walle-prometheus"},"name":"mark-walle-prometheus-mark-walle-prometheus","namespace":"s4g19x-mark-walle-openshift201-may2019-dev"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":9090}],"selector":{"app":"prometheus","component":"mark-walle-prometheus","release":"mark-walle-prometheus"},"type":"ClusterIP"}}
    creationTimestamp: 2019-05-27T17:50:50Z
    labels:
      app: prometheus
      chart: prometheus-8.11.4
      component: mark-walle-prometheus
      heritage: Tiller
      release: mark-walle-prometheus
    name: mark-walle-prometheus-mark-walle-prometheus
    namespace: s4g19x-mark-walle-openshift201-may2019-dev
    resourceVersion: "795016612"
    selfLink: /api/v1/namespaces/s4g19x-mark-walle-openshift201-may2019-dev/services/mark-walle-prometheus-mark-walle-prometheus
    uid: f71146b1-80a7-11e9-8dc7-0050568348cc
  spec:
    clusterIP: 172.50.106.222
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus
      component: mark-walle-prometheus
      release: mark-walle-prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-8.11.4","component":"mark-walle-prometheus","heritage":"Tiller","release":"mark-walle-prometheus"},"name":"mark-walle-prometheus-mark-walle-prometheus","namespace":"s4g19x-mark-walle-openshift201-may2019-dev"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus","component":"mark-walle-prometheus","release":"mark-walle-prometheus"}},"template":{"metadata":{"labels":{"app":"prometheus","chart":"prometheus-8.11.4","component":"mark-walle-prometheus","heritage":"Tiller","release":"mark-walle-prometheus"}},"spec":{"containers":[{"args":["--volume-dir=/etc/config","--webhook-url=http://127.0.0.1:9090/-/reload"],"image":"jimmidyson/configmap-reload:v0.2.2","imagePullPolicy":"IfNotPresent","name":"prometheus-mark-walle-prometheus-configmap-reload","resources":{},"volumeMounts":[{"mountPath":"/etc/config","name":"config-volume","readOnly":true}]},{"args":["--config.file=/etc/config/prometheus.yml","--storage.tsdb.path=/data","--web.console.libraries=/etc/prometheus/console_libraries","--web.console.templates=/etc/prometheus/consoles","--web.enable-lifecycle"],"image":"prom/prometheus:v2.9.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/-/healthy","port":9090},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"prometheus-mark-walle-prometheus","ports":[{"containerPort":9090}],"readinessProbe":{"httpGet":{"path":"/-/ready","port":9090},"initialDelaySeconds":30,"timeoutSeconds":30},"resources":{},"volumeMounts":[{"mountPath":"/etc/config","name":"config-volume"},{"mountPath":"/data","name":"storage-volume","subPath":""}]}],"serviceAccountName":"default","terminationGracePeriodSeconds":300,"volumes":[{"configMap":{"name":"mark-walle-prometheus-mark-walle-prometheus"},"name":"config-volume"},{"name":"storage-volume","persistentVolumeClaim":{"claimName":"mark-walle-prometheus-mark-walle-prometheus"}}]}}}}
    creationTimestamp: 2019-05-27T18:51:48Z
    generation: 2
    labels:
      app: prometheus
      chart: prometheus-8.11.4
      component: mark-walle-prometheus
      heritage: Tiller
      release: mark-walle-prometheus
    name: mark-walle-prometheus-mark-walle-prometheus
    namespace: s4g19x-mark-walle-openshift201-may2019-dev
    resourceVersion: "795096608"
    selfLink: /apis/apps/v1/namespaces/s4g19x-mark-walle-openshift201-may2019-dev/deployments/mark-walle-prometheus-mark-walle-prometheus
    uid: 7b8faee5-80b0-11e9-8dc7-0050568348cc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: prometheus
        component: mark-walle-prometheus
        release: mark-walle-prometheus
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
          chart: prometheus-8.11.4
          component: mark-walle-prometheus
          heritage: Tiller
          release: mark-walle-prometheus
      spec:
        containers:
        - args:
          - --volume-dir=/etc/config
          - --webhook-url=http://127.0.0.1:9090/-/reload
          image: jimmidyson/configmap-reload:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-mark-walle-prometheus-configmap-reload
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: prom/prometheus:v2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: prometheus-mark-walle-prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: mark-walle-prometheus-mark-walle-prometheus
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: mark-walle-prometheus-mark-walle-prometheus
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2019-05-27T18:51:48Z
      lastUpdateTime: 2019-05-27T18:51:48Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2019-05-27T18:51:48Z
      lastUpdateTime: 2019-05-27T18:57:10Z
      message: ReplicaSet "mark-walle-prometheus-mark-walle-prometheus-7f5cd7bbc4"
        has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2019-05-27T18:51:48Z
    generation: 2
    labels:
      app: prometheus
      chart: prometheus-8.11.4
      component: mark-walle-prometheus
      heritage: Tiller
      pod-template-hash: "120976262"
      release: mark-walle-prometheus
    name: mark-walle-prometheus-mark-walle-prometheus-564fcb6b6
    namespace: s4g19x-mark-walle-openshift201-may2019-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mark-walle-prometheus-mark-walle-prometheus
      uid: 7b8faee5-80b0-11e9-8dc7-0050568348cc
    resourceVersion: "795095474"
    selfLink: /apis/apps/v1/namespaces/s4g19x-mark-walle-openshift201-may2019-dev/replicasets/mark-walle-prometheus-mark-walle-prometheus-564fcb6b6
    uid: 7b91af99-80b0-11e9-8dc7-0050568348cc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: prometheus
        component: mark-walle-prometheus
        pod-template-hash: "120976262"
        release: mark-walle-prometheus
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
          chart: prometheus-8.11.4
          component: mark-walle-prometheus
          heritage: Tiller
          pod-template-hash: "120976262"
          release: mark-walle-prometheus
      spec:
        containers:
        - args:
          - --volume-dir=/etc/config
          - --webhook-url=http://127.0.0.1:9090/-/reload
          image: jimmidyson/configmap-reload:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-mark-walle-prometheus-configmap-reload
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: prom/prometheus:v2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: prometheus-mark-walle-prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - chown
          - -R
          - 65534:65534
          - /data
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          name: init-chown-data
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: mark-walle-prometheus-mark-walle-prometheus
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: mark-walle-prometheus-mark-walle-prometheus
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2019-05-27T18:56:17Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-8.11.4
      component: mark-walle-prometheus
      heritage: Tiller
      pod-template-hash: "3917836670"
      release: mark-walle-prometheus
    name: mark-walle-prometheus-mark-walle-prometheus-7f5cd7bbc4
    namespace: s4g19x-mark-walle-openshift201-may2019-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mark-walle-prometheus-mark-walle-prometheus
      uid: 7b8faee5-80b0-11e9-8dc7-0050568348cc
    resourceVersion: "795096607"
    selfLink: /apis/apps/v1/namespaces/s4g19x-mark-walle-openshift201-may2019-dev/replicasets/mark-walle-prometheus-mark-walle-prometheus-7f5cd7bbc4
    uid: 1bb8f3e4-80b1-11e9-8dc7-0050568348cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: prometheus
        component: mark-walle-prometheus
        pod-template-hash: "3917836670"
        release: mark-walle-prometheus
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
          chart: prometheus-8.11.4
          component: mark-walle-prometheus
          heritage: Tiller
          pod-template-hash: "3917836670"
          release: mark-walle-prometheus
      spec:
        containers:
        - args:
          - --volume-dir=/etc/config
          - --webhook-url=http://127.0.0.1:9090/-/reload
          image: jimmidyson/configmap-reload:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-mark-walle-prometheus-configmap-reload
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: prom/prometheus:v2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: prometheus-mark-walle-prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: mark-walle-prometheus-mark-walle-prometheus
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: mark-walle-prometheus-mark-walle-prometheus
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2019-05-27T18:11:03Z
    labels:
      app: prometheus
    name: prometheus
    namespace: s4g19x-mark-walle-openshift201-may2019-dev
    resourceVersion: "795042024"
    selfLink: /apis/route.openshift.io/v1/namespaces/s4g19x-mark-walle-openshift201-may2019-dev/routes/prometheus
    uid: ca3827dc-80aa-11e9-8dc7-0050568348cc
  spec:
    host: prometheus-s4g19x-mark-walle-openshift201-may2019-dev.pathfinder.gov.bc.ca
    port:
      targetPort: http
    to:
      kind: Service
      name: mark-walle-prometheus-mark-walle-prometheus
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2019-05-27T18:11:03Z
        status: "True"
        type: Admitted
      host: prometheus-s4g19x-mark-walle-openshift201-may2019-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  data:
    alerts: |
      {}
    prometheus.yml: |
      global:
        evaluation_interval: 1m
        scrape_interval: 1m
        scrape_timeout: 10s
      rule_files:
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: prometheus
        static_configs:
        - targets:
          - localhost:9090
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
        - role: pod
          namespaces:
              names:
                - s4g19x-mark-walle-openshift201-may2019-dev
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_pod_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: kubernetes_pod_name
    rules: |
      {}
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"alerts":"{}\n","prometheus.yml":"global:\n  evaluation_interval: 1m\n  scrape_interval: 1m\n  scrape_timeout: 10s\nrule_files:\n- /etc/config/rules\n- /etc/config/alerts\nscrape_configs:\n- job_name: prometheus\n  static_configs:\n  - targets:\n    - localhost:9090\n- job_name: kubernetes-pods\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n        names:\n          - s4g19x-mark-walle-openshift201-may2019-dev\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_name\n    target_label: kubernetes_pod_name\n","rules":"{}\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-8.11.4","component":"mark-walle-prometheus","heritage":"Tiller","release":"mark-walle-prometheus"},"name":"mark-walle-prometheus-mark-walle-prometheus","namespace":"s4g19x-mark-walle-openshift201-may2019-dev"}}
    creationTimestamp: 2019-05-27T18:51:48Z
    labels:
      app: prometheus
      chart: prometheus-8.11.4
      component: mark-walle-prometheus
      heritage: Tiller
      release: mark-walle-prometheus
    name: mark-walle-prometheus-mark-walle-prometheus
    namespace: s4g19x-mark-walle-openshift201-may2019-dev
    resourceVersion: "795090301"
    selfLink: /api/v1/namespaces/s4g19x-mark-walle-openshift201-may2019-dev/configmaps/mark-walle-prometheus-mark-walle-prometheus
    uid: 7b6d60c3-80b0-11e9-8dc7-0050568348cc
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
